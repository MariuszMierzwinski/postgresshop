
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

## This is important
# Hibernate ddl auto (create, create-drop, validate, update)
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.url=jdbc:postgresql://localhost:5432/webshop
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true

spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.datasource.url=jdbc:mysql://localhost:3306/webshop?useUnicode=true&characterEncoding=utf-8& useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Europe/Warsaw
spring.datasource.username=webshop
spring.datasource.password=Ghandi73..
server.port=8081
#spring.mvc.view.prefix =/WEB-INF/jsp/
#spring.mvc.view.suffix =.jsp

#spring.view.view-names:*
#spring.thymeleaf.view-names:*

spring.thymeleaf.templateResolverOrder=0
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=5MB
# Max Request Size
spring.servlet.multipart.max-request-size=10MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/home/mariusz/Documents/POSTGRES2/src/main/webapp/Picture/
spring.flyway.enabled=false
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true
